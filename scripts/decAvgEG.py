import os.path
from os import listdir
import numpy as np
import math
from scipy.stats import entropy as en


path = "/hex_dec" # path to decimal values 
path2 = "/content/drive/MyDrive/Malware Analysis/dec_avg.entropy"      # path to save average entropy of all families

for i in (listdir(path)):                     #OPENING A PARTICULAR CLASS
    class_name = os.path.basename(os.path.join(path,i)) 
    print(class_name)
    path3 = path+"/"+i  #path of particular file in each clss

    for j in(listdir(path3)):
      myfile = open(os.path.join(path3,j),"r",errors='ignore')    #opening a particular decimal file
      file_name = os.path.basename(os.path.join(path3,j)) #storing file name
      print(file_name)

      contents = myfile.read()

      str_list = contents.replace('\n', '').split(" ") # Eliminating spaces
      str_list = contents.replace(',', '').split(" ") # Eliminating ,
      dec_list = []
      for ele in str_list:
        dec_list.append(ele)
      
      dec_arr = np.array(dec_list)
      
      # striping ] from the last element
      temp = dec_arr[len(dec_arr)-1]
      fir = temp[-1]
      #print(fir)
      strr1 = temp.rstrip(fir)
      #print(strr1)
      dec_arr[len(dec_arr)-1] = strr1
      
      # striping [ from the frist element
      for i in range(0, len(dec_arr)-1):
        if i == 0:
          strr = str(dec_arr[i])
          fir = strr[0]
          strr1 = strr.lstrip(fir)
          dec_arr[i] = strr1

      # changing numpy.str to numpy.int64
      arr = dec_arr.astype(np.int)

      # find the number of segments in the array
      sz = len(arr)
      no_seg = sz//256
      no_seg = str(no_seg)
      #print(no_seg)

      # creating an average entropy list of all the segments in the array 
      import math
      segment_size = 256
      averages = []
      for i in range(0, len(arr), segment_size):
        subset = arr[i:i+segment_size]
        entropy = 0
        for element in subset:
          prob = np.unique(element, return_counts = True)
          entropy += en(prob)
        average_entropy = entropy / segment_size
        average_entropy = float(average_entropy)
        averages.append(average_entropy)
        #average_str = str(average_entropy)
      
      path4 = path2 + "/" + class_name

      with open(r'{}/{}.txt'.format(path4, file_name), 'w') as fp:
        fp.write('{}'.format(averages))