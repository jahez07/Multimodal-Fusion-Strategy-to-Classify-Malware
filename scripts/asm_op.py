import os.path
from os import listdir
import numpy as np
import math


path = "/Big2015/labelled_asm"  # path to labelled assembly code
path2 = "/Users/jahezabrahamjohny/Desktop/Jahez/Malware/SimHash/opCode" # path to Opcode directory

# getting the list of opcodes
mne_path = "/Users/jahezabrahamjohny/Desktop/Jahez/Malware/SimHash/Data/mnemonic_list.txt"
mne_file = open(mne_path, "r", errors = "ignore")
opcodes_str = mne_file.read() # reading the text file and assigning it to opcodes_str
OPCODES = list(opcodes_str.split("\n")) # initializing list OPCODES by spliting opcodes_str by '\n'


lis = ""
count = 0   #count to know the number of files processed

for i in (listdir(path)):                     #OPENING A PARTICULAR CLASS
    class_name = os.path.basename(os.path.join(path,i))
    if class_name == "Lollipop":
        print(class_name)
        path3 = path+"/"+i  #path of particular file in each clss
        
        for j in(listdir(path3)):
            output_stream = ""
            file_ = open(os.path.join(path3,j),"r",errors='ignore')    #opening a particular opcode file of an exe
        
            file_name = os.path.basename(os.path.join(path3,j)) #storing file name
            print(file_name)
            contents = file_.read()
        
            source_words = contents.split()
            opcodes = [w for w in source_words if w in OPCODES]

            l = ""
            for ele in opcodes:
                l += ele +" "
            #print(l)
            output_stream = output_stream + l + "\n"

            path4 = path2 + "/" + class_name
                #         print(path4)

            with open(r'{}/{}.txt'.format(path4, file_name), 'w') as fp:
                fp.write(output_stream)  # writing the valid opcode to the file
    
