import os
import hashlib
import numpy as np

# Define the path to the folder containing your documents
documents_folder = "/Users/jahezabrahamjohny/Desktop/Jahez/Research_CyberSecurity/SimHash/opCode/Vundo"

simhash_folder = "/Users/jahezabrahamjohny/Desktop/Jahez/Research_CyberSecurity/SimHash/SimCode/Vundo"

# Define the dimension of the SimHash vector
n = 512

# Function to calculate SimHash Code 's' for a document
def calculate_simhash(document_content):
    v = np.zeros(n, dtype=int)  # Initialize the 'v' vector as an array of zeros
    s = [0] * n
    
    # Hash function using MD5 (you can use a different hash function if needed)
    def hash_function(data):
        return int(hashlib.sha512(data.encode()).hexdigest(), 16) % (2 ** n)

    # Split the document content into keywords (you might need to adapt this based on your document structure)
    keywords = document_content.split()
    
    # Calculate the hash value for each keyword and update the 'v' vector
    for keyword in keywords:
        b = hash_function(keyword)
        for i in range(n):
            if (b >> i) & 1 == 1:
                v[i] += 1
            else:
                v[i] -= 1
        for i in range(n):
            if v[i] > 0:
                s[i] = 1
            else:
                s[i] = 0
    
    return s

# Process each document in the folder
for filename in os.listdir(documents_folder):
    if filename.endswith(".txt"):  # Assuming your documents have a .txt extension
        # Read the content of the document
        with open(os.path.join(documents_folder, filename), "r") as file:
            document_content = file.read()
        
        # Calculate the SimHash Code 's'
        simhash_code = calculate_simhash(document_content)

        # Save the SimHash Code 's' to a new file in the SimHash folder
        simhash_filename = os.path.splitext(filename)[0] + "_SimHash.txt"
        with open(os.path.join(simhash_folder, simhash_filename), "w") as file:
            file.write(" ".join(map(str, simhash_code)))  # Write the vector as space-separated values